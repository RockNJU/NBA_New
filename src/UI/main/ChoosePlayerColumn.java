package UI.main;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import java.awt.FlowLayout;
import java.util.ArrayList;

public class ChoosePlayerColumn extends JFrame  {

	private JPanel contentPane;
	int x,y;
	ArrayList<JCheckBox> jcs=new ArrayList<JCheckBox>();
	JButton exit;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					String[] playerTotaltitle = {" 序号  ", " 球员名称  ", " 所属球队  ","参赛数",
							"先发场数", "篮板", "助攻", "上场时间", "投篮命中率", "三分命中率",
							"罚球命中率", "进攻", "防守", "抢断", "盖帽", "失误",
							"犯规", "得分", "效率 ", "GmSc效率值", "真实命中率", "投篮效率",
							"篮板率", "进攻篮板数", "防守篮板数", "助攻率", "抢断率", "盖帽率",
							"失误率", "使用率" ,"近五场得分提升率","近五场助攻提升率","近五场篮板提升率"};
					ChoosePlayerColumn frame = new ChoosePlayerColumn(playerTotaltitle);
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public ChoosePlayerColumn(String[] title) {
		setUndecorated(true);// 取消窗体修饰效果************
		setDragable();//移动功能
		contentPane.setLayout(null);
		Toolkit toolkit= Toolkit.getDefaultToolkit();
		Dimension screen=toolkit.getScreenSize();
		x=(screen.width-getWidth())/2;
		y=(screen.height-getHeight())/2-16;	
		setLocation(x,y);
		
		setSize( 500, 400);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		
		addWindowListener(new WindowAdapter() {
	        @Override
	        public void windowOpened(WindowEvent e) {
	             do_this_windowOpened(e);
	            
	        }
	    });
		
		
		/*" 序号  ", " 球员名称  ", " 所属球队  ","参赛数",
		"先发场数", "篮板", "助攻", "上场时间", "投篮命中率", "三分命中率",
		"罚球命中率", "进攻", "防守", "抢断", "盖帽", "失误",
		"犯规", "得分", "效率 ", "GmSc效率值", "真实命中率", "投篮效率",
		"篮板率", "进攻篮板数", "防守篮板数", "助攻率", "抢断率", "盖帽率",
		"失误率", "使用率" ,"近五场得分提升率","近五场助攻提升率","近五场篮板提升率"*/
		
		
		
		
		
		JLabel basicinfo = new JLabel("\u57FA\u7840\u4FE1\u606F\u9009\u9879\uFF1A");
		basicinfo.setFont(new Font("华康雅宋体W9", Font.PLAIN, 18));
		basicinfo.setBounds(10, 10, 147, 36);
		contentPane.add(basicinfo);
		
		JCheckBox 球员名称 = new JCheckBox("\u7403\u5458\u540D\u79F0");
		球员名称.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		球员名称.setEnabled(false);
		球员名称.setSelected(true);
		球员名称.setBounds(20, 40, 95, 36);
		contentPane.add(球员名称);
		
		JCheckBox 所属球队 = new JCheckBox("\u6240\u5C5E\u7403\u961F");
		所属球队.setSelected(true);
		所属球队.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		所属球队.setBounds(133, 40, 95, 36);
		contentPane.add(所属球队);
		
		JLabel label = new JLabel("\u6BD4\u8D5B\u57FA\u7840\u4FE1\u606F\u9009\u9879\uFF1A");
		label.setFont(new Font("华康雅宋体W9", Font.PLAIN, 18));
		label.setBounds(10, 82, 188, 36);
		contentPane.add(label);
		
		JCheckBox 参赛场数 = new JCheckBox("\u53C2\u8D5B\u573A\u6570");
		参赛场数.setSelected(true);
		参赛场数.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		参赛场数.setBounds(20, 113, 95, 36);
		contentPane.add(参赛场数);
		
		JCheckBox 先发场数 = new JCheckBox("\u5148\u53D1\u573A\u6570");
		先发场数.setSelected(true);
		先发场数.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		先发场数.setBounds(133, 113, 95, 36);
		contentPane.add(先发场数);
		
		JCheckBox 篮板 = new JCheckBox("\u7BEE\u677F");
		篮板.setSelected(true);
		篮板.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		篮板.setBounds(242, 113, 67, 36);
		contentPane.add(篮板);
		
		JCheckBox 助攻 = new JCheckBox("\u52A9\u653B");
		助攻.setSelected(true);
		助攻.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		助攻.setBounds(318, 113, 67, 36);
		contentPane.add(助攻);
		
		JCheckBox 上场时间 = new JCheckBox("\u4E0A\u573A\u65F6\u95F4");
		上场时间.setSelected(true);
		上场时间.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		上场时间.setBounds(399, 113, 95, 36);
		contentPane.add(上场时间);
		
		JCheckBox 投篮命中率 = new JCheckBox("\u6295\u7BEE\u547D\u4E2D\u7387");
		投篮命中率.setSelected(true);
		投篮命中率.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		投篮命中率.setBounds(20, 151, 114, 36);
		contentPane.add(投篮命中率);
		
		JCheckBox 三分命中率 = new JCheckBox("\u4E09\u5206\u547D\u4E2D\u7387");
		三分命中率.setSelected(true);
		三分命中率.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		三分命中率.setBounds(133, 151, 114, 36);
		contentPane.add(三分命中率);
		
		JCheckBox 罚球命中率 = new JCheckBox("\u7F5A\u7403\u547D\u4E2D\u7387");
		罚球命中率.setSelected(true);
		罚球命中率.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		罚球命中率.setBounds(242, 151, 106, 36);
		contentPane.add(罚球命中率);
		
		JCheckBox 进攻 = new JCheckBox("\u8FDB\u653B");
		进攻.setSelected(true);
		进攻.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		进攻.setBounds(358, 151, 67, 36);
		contentPane.add(进攻);
		
		JCheckBox 防守 = new JCheckBox("\u9632\u5B88");
		防守.setSelected(true);
		防守.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		防守.setBounds(427, 151, 55, 36);
		contentPane.add(防守);
		
		JCheckBox 抢断 = new JCheckBox("\u62A2\u65AD");
		抢断.setSelected(true);
		抢断.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		抢断.setBounds(20, 189, 67, 36);
		contentPane.add(抢断);
		
		JCheckBox 盖帽 = new JCheckBox("\u76D6\u5E3D");
		盖帽.setSelected(true);
		盖帽.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		盖帽.setBounds(104, 189, 67, 36);
		contentPane.add(盖帽);
		
		JCheckBox 失误 = new JCheckBox("\u5931\u8BEF");
		失误.setSelected(true);
		失误.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		失误.setBounds(180, 189, 67, 36);
		contentPane.add(失误);
		
		JCheckBox 犯规 = new JCheckBox("\u72AF\u89C4");
		犯规.setSelected(true);
		犯规.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		犯规.setBounds(263, 189, 67, 36);
		contentPane.add(犯规);
		
		JCheckBox 得分 = new JCheckBox("\u5F97\u5206");
		得分.setSelected(true);
		得分.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		得分.setBounds(344, 189, 67, 36);
		contentPane.add(得分);
		
		JLabel label_1 = new JLabel("\u6BD4\u8D5B\u5206\u6790\u4FE1\u606F\u9009\u9879\uFF1A");
		label_1.setFont(new Font("华康雅宋体W9", Font.PLAIN, 18));
		label_1.setBounds(10, 231, 188, 36);
		contentPane.add(label_1);
		
		JCheckBox 效率 = new JCheckBox("\u6548\u7387");
		效率.setSelected(true);
		效率.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		效率.setBounds(20, 262, 67, 36);
		contentPane.add(效率);
		
		JCheckBox Gmsc = new JCheckBox("GmSC\u6548\u7387\u503C");
		Gmsc.setSelected(true);
		Gmsc.setFont(new Font("华康雅宋体W9", Font.PLAIN, 15));
		Gmsc.setBounds(97, 262, 114, 36);
		contentPane.add(Gmsc);

		
		/**
		 * 背景图片
		 */

		ImageIcon image = new ImageIcon("pic/弹框显示.png");

		image.setImage(image.getImage().getScaledInstance(500, 400,Image.SCALE_DEFAULT));
	
		
		JLabel photo = new JLabel(image);
		photo.setBounds(225, 10, 500, 400);
		photo.setOpaque(false);
		getContentPane().add(photo);
		setLocationRelativeTo(null);
	}
	
	
	
	 protected void do_this_windowOpened(WindowEvent e) {
	        final int height = this.getHeight();// 记录窗体高度
	        new Thread() {// 创建新线程
	            public void run() {
	            	Rectangle rec = getBounds();
	                for (int i = 0; i <= 500; i += 5) {// 循环拉伸窗体
	                	 setBounds(rec.x+250-i/2 , rec.y, i, height);// 不断设置窗体大小与位置
	                     try {
	                        Thread.sleep(1);// 线程休眠1毫秒
	                    } catch (InterruptedException e1) {
	                        e1.printStackTrace();
	                    }
	                }
	            }
	        }.start();// 启动线程
	    }
	
	
	
	private boolean isDragged = false;
	 private Point loc = null;
	 private Point tmp = null;
	 /**
		 * 设置可以拖动窗体
		 */
		protected void setDragable () {
			this.addMouseListener(new MouseAdapter() {

				public void mouseReleased (java.awt.event.MouseEvent e) {
					isDragged = false;
				}

				public void mousePressed (java.awt.event.MouseEvent e) {
					tmp = new Point(e.getX(), e.getY());
					isDragged = true;
				}

			});

			this.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {

				public void mouseDragged (java.awt.event.MouseEvent e) {
					if (isDragged) {
						loc = new Point(getLocation().x + e.getX() - tmp.x, getLocation().y + e.getY() - tmp.y);
						setLocation(loc);
					}
				}
			});
		}
}
